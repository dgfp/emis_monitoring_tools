<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="icon" href="resources/logo/rhis_favicon.png">
        <meta name="description" content="">
        <meta name="author" content="">
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Expires" content="0" />

        <title>eMIS</title>
        <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
        <link href="resources/TemplateCSS/_all-skins.min.css" rel="stylesheet" type="text/css"/>
        <link href="resources/TemplateCSS/bootstrap.min.css" rel="stylesheet" type="text/css"/>
        <link href="resources/css/AdminLTE.min.css" rel="stylesheet" type="text/css"/>
        <link href="resources/TemplateCSS/pace.min.css" rel="stylesheet" type="text/css"/>
        <script src="resources/js/moment.min.js"></script>
        <script src="resources/jquery/jquery.min.js"></script>
        <script src="resources/js/$.app.js"></script>
        <script src="resources/js/ReportSubmission.js"></script>
        <link href="resources/TemplateCSS/dataTables.bootstrap.css" rel="stylesheet" type="text/css"/>
        <link href="resources/css/style.css" rel="stylesheet" type="text/css"/>
        <!--        Fontt Awesone-->
        <script src="https://use.fontawesome.com/a4e256df38.js"></script>

        <link href="resources/TemplateCSS/datepicker3.css" rel="stylesheet" type="text/css"/>
        <script src="resources/TemplateJs/chart/Chart.min-v2.6.0.js" type="text/javascript"></script>
        <script src="resources/TemplateJs/toastr.js" type="text/javascript"></script>
        <link href="resources/TemplateCSS/toastr.css" rel="stylesheet" type="text/css"/>
        <link href="resources/TemplateCSS/select2.min.css" rel="stylesheet" type="text/css"/>
        <style>
            .box-tools .btn-remove,.box-tools [data-widget=remove]{ display:none } 
            @font-face {
                font-family: SolaimanLipi;
                src: url('resources/fonts/SolaimanLipi.ttf');
            }
            [class*="col"] { margin-bottom: 10px; }
        </style>
        <script type="text/javascript">
            function googleTranslateElementInit() {
                new google.translate.TranslateElement({pageLanguage: 'en'}, 'google_translate_element');
            }
        </script>
        <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
        <script>

            //Check internet connection when page is reload
            function CheckOnlineStatus(msg) {
                //var status = document.getElementById("status");
                var condition = navigator.onLine ? "ONLINE" : "OFFLINE";
                if (condition == 'OFFLINE') {
                    toastr["error"]("<h4><b>No internet connection</b></h4>");
                    document.getElementById("status").innerHTML = "<i class='fa fa-circle text-danger'></i>&nbsp;&nbsp;<b>Offline</b>";
                }
            }
            //Check interter connection when page is reload
            function Pageloaded() {
                CheckOnlineStatus("load");
                document.body.addEventListener("offline", function () {
                    CheckOnlineStatus("offline")
                }, false);
                document.body.addEventListener("online", function () {
                    CheckOnlineStatus("online")
                }, false);
            }

            $(document).ready(function () {
                $('#endDate').val($.app.date().date);
                $("#back-to-top").remove();
                //hide cross button
                $("[data-widget='remove']").hide();
                //selected current year from year dropdown
                $("#year").val((new Date()).getFullYear());

                //Set current month
                var d = new Date(), n = d.getMonth();
                $('#month option:eq(' + n + ')').prop('selected', true);

                //Check internet connection
                function updateOnlineStatus()
                {
                    document.getElementById("status").innerHTML = "<i class='fa fa-circle text-success'></i>&nbsp;&nbsp;<b>Online</b>";
                    toastr["success"]("<h4><b>Connection available now</b></h4>");
                    location.reload();
                }
                function updateOfflineStatus()
                {
                    document.getElementById("status").innerHTML = "<i class='fa fa-circle text-danger'></i>&nbsp;&nbsp;<b>Offline</b>";
                    toastr["error"]("<h4><b>No internet connection</b></h4>");
                }
                window.addEventListener('online', updateOnlineStatus);
                window.addEventListener('offline', updateOfflineStatus);

                //Toast initilization
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": true,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "3000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                };

                //checking bootstrap timeout
//                    var secondsBeforeExpire = <c:out value="${pageContext.session.maxInactiveInterval}"/>;
//                    var timeToDecide = 30; // Give client 15 seconds to choose.
//                    setTimeout(function() {
//                        window.location.replace("home");
//                    }, (secondsBeforeExpire - timeToDecide) * 1000);

//                $(function () {
//                    if (window.location.pathname === "/rhisdemo/home" || window.location.pathname === "/rhisdemo/") {
//                        $('#side-menu').hide();
//                    }
//                });

                //Back to top button
                $(window).scroll(function () {
                    if ($(this).scrollTop() > 50) {
                        $('#back-to-top').fadeIn();
                    } else {
                        $('#back-to-top').fadeOut();
                    }
                });
                // scroll body to 0px on click
                $('#back-to-top').click(function () {
                    $('#back-to-top').tooltip('hide');
                    $('body,html').animate({
                        scrollTop: 0
                    }, 800);
                    return false;
                });

                $('#back-to-top').tooltip('show');
            });

            //For table short
            function short(index) {
                var table, rows, switching, i, x, y, shouldSwitch;
                table = document.getElementById("data-table");
                switching = true;
                /*Make a loop that will continue until
                 no switching has been done:*/
                while (switching) {
                    //start by saying: no switching is done:
                    switching = false;
                    rows = table.getElementsByTagName("TR");
                    /*Loop through all table rows (except the
                     first, which contains table headers):*/
                    for (i = 1; i < (rows.length - 1); i++) {
                        //start by saying there should be no switching:
                        shouldSwitch = false;
                        /*Get the two elements you want to compare,
                         one from current row and one from the next:*/
                        x = rows[i].getElementsByTagName("TD")[index];
                        y = rows[i + 1].getElementsByTagName("TD")[index];
                        //check if the two rows should switch place:
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                    if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                         and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            //Numeric value converter
            window.numbers = {
                0: '০',
                1: '১',
                2: '২',
                3: '৩',
                4: '৪',
                5: '৫',
                6: '৬',
                7: '৭',
                8: '৮',
                9: '৯'
            };
            function convertE2B(input, numbers) {
                numbers = numbers || window.numbers;
                input = input + "";

                var output = [];
                for (var i = 0; i < input.length; ++i) {
                    if (numbers.hasOwnProperty(input[i])) {
                        output.push(numbers[input[i]]);
                    } else {
                        output.push(input[i]);
                    }
                }
                return output.join('');
            }

            function convertB2E(input) {
                var numbers = window.numbers;
                var _numbers = {};
                for (var k in numbers) {
                    var v = numbers[k];
                    _numbers[v] = k;
                }
                return convertE2B(input, _numbers);
            }

            window.e2b = convertE2B;
            window.b2e = convertB2E;



            function convertE2B2(s) {
                return $.map(s.toString().split(""), function (o) {
                    return numbers[o] ? numbers[o] : o
                }).join("");
            }





            //Convert 2017-01-25 to 25-01-2017
            function convertDateFrontFormat(dateString) {
                var parts = dateString.split("-");
                var year = parts[0];
                var month = parts[1];
                var date = parts[2];
                return date + "/" + month + "/" + year;
            }

            //======Make CSV export using these function=====================================================
            function exportTableToText($table, filename) {
                var $headers = $table.find('tr:has(th)')
                        , $rows = $table.find('tr:has(td)')

                        // Temporary delimiter characters unlikely to be typed by keyboard
                        // This is to avoid accidentally splitting the actual contents
                        , tmpColDelim = String.fromCharCode(11) // vertical tab character
                        , tmpRowDelim = String.fromCharCode(0) // null character

                        // actual delimiter characters for CSV format
                        , colDelim = '","'
                        , rowDelim = '"\r\n"';

                // Grab text from table into CSV formatted string
                var text = '"';
                text += formatRows($headers.map(grabRow));
                text += rowDelim;
                text += formatRows($rows.map(grabRow)) + '"';

                // Data URI
                var csvData = 'data:application/text;charset=utf-8,' + encodeURIComponent(text);

                // For IE (tested 10+)
                if (window.navigator.msSaveOrOpenBlob) {
                    var blob = new Blob([decodeURIComponent(encodeURI(text))], {
                        type: "charset=utf-8;"
                    });
                    navigator.msSaveBlob(blob, filename);
                } else {
                    $(this)
                            .attr({
                                'download': filename
                                , 'href': csvData
                                        //,'target' : '_blank' //if you want it to open in a new window
                            });
                }

                // Format the output so it has the appropriate delimiters
                function formatRows(rows) {
                    return rows.get().join(tmpRowDelim)
                            .split(tmpRowDelim).join(rowDelim)
                            .split(tmpColDelim).join(colDelim);
                }
                // Grab and format a row from the table
                function grabRow(i, row) {
                    var $row = $(row);
                    //for some reason $cols = $row.find('td') || $row.find('th') won't work...
                    var $cols = $row.find('td');
                    if (!$cols.length)
                        $cols = $row.find('th');

                    return $cols.map(grabCol)
                            .get().join(tmpColDelim);
                }
                // Grab and format a column from the table 
                function grabCol(j, col) {
                    var $col = $(col),
                            $text = $col.text();
                    return $text.replace('"', '""'); // escape double quotes
                }
            }
            function exportTableToCSV($table, filename) {
                var $headers = $table.find('tr:has(th)')
                        , $rows = $table.find('tr:has(td)')

                        // Temporary delimiter characters unlikely to be typed by keyboard
                        // This is to avoid accidentally splitting the actual contents
                        , tmpColDelim = String.fromCharCode(11) // vertical tab character
                        , tmpRowDelim = String.fromCharCode(0) // null character

                        // actual delimiter characters for CSV format
                        , colDelim = '","'
                        , rowDelim = '"\r\n"';

                // Grab text from table into CSV formatted string
                var csv = '"';
                csv += formatRows($headers.map(grabRow));
                csv += rowDelim;
                csv += formatRows($rows.map(grabRow)) + '"';

                // Data URI
                var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

                // For IE (tested 10+)
                if (window.navigator.msSaveOrOpenBlob) {
                    var blob = new Blob([decodeURIComponent(encodeURI(csv))], {
                        type: "text/csv;charset=utf-8;"
                    });
                    navigator.msSaveBlob(blob, filename);
                } else {
                    $(this)
                            .attr({
                                'download': filename
                                , 'href': csvData
                                        //,'target' : '_blank' //if you want it to open in a new window
                            });
                }

                // Format the output so it has the appropriate delimiters
                function formatRows(rows) {
                    return rows.get().join(tmpRowDelim)
                            .split(tmpRowDelim).join(rowDelim)
                            .split(tmpColDelim).join(colDelim);
                }
                // Grab and format a row from the table
                function grabRow(i, row) {
                    var $row = $(row);
                    //for some reason $cols = $row.find('td') || $row.find('th') won't work...
                    var $cols = $row.find('td');
                    if (!$cols.length)
                        $cols = $row.find('th');

                    return $cols.map(grabCol)
                            .get().join(tmpColDelim);
                }
                // Grab and format a column from the table 
                function grabCol(j, col) {
                    var $col = $(col),
                            $text = $col.text();
                    return $text.replace('"', '""'); // escape double quotes
                }
            }
            //================================================END=====================================
        </script>
        <style>
            .table-bordered>thead>tr>th, .table-bordered>tbody>tr>th, .table-bordered>tfoot>tr>th, .table-bordered>thead>tr>td, .table-bordered>tbody>tr>td, .table-bordered>tfoot>tr>td {
                border-color: #e0e0e0!important;
                border-left-color: #e0e0e0!important;
                border-right-color: #e0e0e0!important;
                border-bottom-color: #e0e0e0!important;
            }
            .dataTables_info{
                font-weight: bold;
            }
            .back-to-top {
                cursor: pointer;
                position: fixed;
                bottom: 20px;
                right: 20px;
                display:none;
            }

            /*            For tab responsive*/
            #areaPanel{
                margin-top: -93px;
            }
            .btn-remove{
                display: none;
            }
            /*            Second row of drop down*/
            .secondRow{
                margin-top: -19px;
            }
            label{
                margin-top: 8px;
                margin-bottom: -5px;
            }
            .main-footer{
                display: none;
            }
            .ha-report-table{
                width: 100%!important;
            }
            .underDevTitle{
                display: none;
                color: red;
                font-size: 20px;
                font-weight: bold;
                text-align: center;
            }

            .a-w{
                display: none;
            }
            .a-w-area{
                margin-top: -52px!important;
            }
            #exportWarningModal{
                display: none;
            }
            .table-bordered>thead>tr>th, .table-bordered>thead>tr>td {
                border-bottom-width: 0px!important;
            }
        </style>
    </head>

    <body class="hold-transition skin-blue fixed sidebar-mini" onload="Pageloaded();">
        <div class="wrapper">
            <div class="content-wrapper">
                <!--some variables for identify user-->
                <input type="hidden" value="${userLevel}" id="userLevel">
                <% if (session.getAttribute("designation") != null) {%>
                <input type='hidden' id='userDesignation' value='<%=session.getAttribute("designation")%>'>
                <% } else {%>
                <input type='hidden' id='userDesignation' value=''>
                <% } %>
                
                <% if (session.getAttribute("username") != null) {%>
                <input type='hidden' id='userid' value='<%=session.getAttribute("username")%>'>
                <% } else {%>
                <input type='hidden' id='userid' value=''>
                <% } %>

                <% if (session.getAttribute("isTabAccess") != null) {%>
                <input type='hidden' id='isTabAccess' value='<%=session.getAttribute("isTabAccess")%>'>
                <% } else {%>
                <input type='hidden' id='isTabAccess' value='false'>
                <% }%>

                <% if (session.getAttribute("category") != null) {%>
                <input type='hidden' id='userCategory' value='<%=session.getAttribute("category")%>'>
                <% } else {%>
                <input type='hidden' id='userCategory' value=''>
                <% }%>